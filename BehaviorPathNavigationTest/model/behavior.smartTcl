(tcl-kb-update 
  :key '(is-a name) 
  :value `(
            (is-a navPath)
            (name 0)
            (path ((1 (0 0 1.0 (6 (0 -1.6 0.6 0) (1 0.6 1.36 0) (2 0.87 -1.0 0) (3 0.0 0.0 0) (4 -0.8 1.8 0) (0 -1.6 0.6 0))))))
))

(tcl-kb-update 
  :key '(is-a name) 
  :value `(
            (is-a navPath)
            (name 1)
            (path ((1 (0 0 1.0 (8 (0 0.0 0.0 0) (1 0.0 1.0 0) (2 1.0 1.0 0) (3 1.0 0.5 0) (4 0.5 0.5 0) (5 0.5 1.5 0) (6 0.75 1.5 0) (7 0.75 0.0 0))))))
))


(tcl-kb-update 
  :key '(is-a name) 
  :value `(
            (is-a navPath)
            (name 2)
            (path ((2 (0 0 1.0 (2 (0 0.0 0.0 0) (1 1.0 1.0 0))) (1 0 1.0 (2 (0 2.0 2.0 0) (1 3.0 3.0 0))))))
))
            
(define-tcb (sendPath ?name)

  (action (
  	(let ((path (get-value (tcl-kb-query :key '(is-a name) :value '((is-a navPath)(name ?name))) 'path))) 
	    (format t "################################## sendPath ~s ~%" path)
	    (tcl-push-plan :plan `(
			(navPath.sendNavPath ,path)
	    ))
    )
    
  ))  
)

(define-tcb (queryPath ?from ?to)
  (action (
            (format t "=========================>>> queryPath from: ~s to: ~s ~%" '?from '?to)
		  )
  )
  (plan (
            (navPath.queryShortestPath ?from ?to)
		  )
  )  
)



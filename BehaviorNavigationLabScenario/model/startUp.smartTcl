(format t "INIT DONE ~%")

(defun format-locations (s obj colonmod at-sign) (declare (ignore colonmod)) (declare (ignore at-sign)) (format s "~s" (get-value obj 'name)))

;; MENU
(defvar nmbr nil)

(defun menu()
  (execute '(navigation.initNavigation))
  (execute '(navigation.loadNavigationMap "navigation-map"))
  ;(execute '(localizationModInst.tcb-load-localization-map-only "localization-map.yaml"))
  (execute '(localizationModInst.localizationSetRobotPose 0 0 0))
(loop

  (let ((known-locations (tcl-kb-query-all :key '(is-a) :value '((is-a location)))))

  (format t "~%MENU~%====~%~%")
  (format t " ---------------------------------------------------- ~%")
  (format t " 3 - Start Joystick Navigation ~%")
  (format t " 4 - Stop Joystick Navigation ~%")
  (format t " ---------------------------------------------------- ~%")
  (format t " 5 - Approach location~%")
  (format t " ---------------------------------------------------- ~%")
  ;(format t " 95 - Add new locations ~%")
  (format t " 96 - Show locations ~%")
  ;(format t " 97 - Save locations to file ~%")
  ;(format t " 98 - Load locations from file ~%")
  (format t "99 - quit menu ~%")
  (format t " 0 - exit ~%")
  (setf nmbr (parse-integer (read-line nil)))
  (format t "your choice: ~d ~%" nmbr)
  
  (cond
    ((equal nmbr 3)
      (execute '(navigation.tcb-joystick-navigation)))
    ((equal nmbr 4)
      (execute '(navigation.tcb-stop-joystick-navigation)))
    ((equal nmbr 5)
     (format t "Approach location - known locations: ~%")
     (format t "~%~{~/format-locations/~^, ~}~%~%" known-locations)
     (format t "Enter location name: ~%")
     (setf locations-var (string-upcase (read-line nil)))
     (setf locations-var (intern locations-var))
     (format t "your choice: ~a ~%" locations-var)
       (execute '(localizationModInst.tcb-activate-localization))
       (execute `(navigation.approachLocation,locations-var))
       (execute '(localizationModInst.tcb-deactivate-localization)))
    ;((equal nmbr 95)
     ;(add-locations))
    ((equal nmbr 96)
     (show-locations))
    ;((equal nmbr 97)
    ; (save-positions-from-kb-to-file))
    ;((equal nmbr 98)
    ; (load-positions-from-file-to-kb))
    ((equal nmbr 99)
      (format t "type (menu) to come back to menu ~%")
      (return))
    ((equal nmbr 0)
      (format t "bye bye ~%")
      (quit))))))

(menu)
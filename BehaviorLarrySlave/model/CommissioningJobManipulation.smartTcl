(define-tcb (CommissioningJobManipulation ?jobid)
  (module "Seq2SeqModule")
  (rules (rule-abort-job-error-ack))
  (action (
    (format t "=========================>>> Timo: CommissioningJobManipulation id: ~a ~%" ?jobid)
 	    (let* ((job (tcl-kb-query :key '(is-a id) :value '((is-a job)(id ?jobid))))
 	    	(docking-waypoint (get-value job 'docking-waypoint))
		   (order-list (get-value job 'commission-order)))

	           (format t "JOB ~s~%" job)
		   (format t "ORDER LIST ~s~%" order-list)

		   	  (cond
	  			((equal docking-waypoint -1)
	  				(setf nav-type "free")
	  			)
	  	
	  			(T
	  				(setf nav-type "path")
	  			)
	  		 )
		   (tcl-push-plan :plan `(
                                          ;(tcb-gripper open)
                                  (manipulationModule.gotoAnglesOR 'name standby)
                       			  (SEQ2SEQ.tcb-run-commissioning ',order-list ,nav-type)
                       			  ;(tcb-run-commissioning ',order-list ,nav-type)
			                  ;(tcb-finalize-commissioning-job ,id)
		                          ;(tcb-send-job-done-tcl-bridge ,id)
			                  ;(tcb-execute-next-job)
				         ))))))
